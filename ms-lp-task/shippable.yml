language: java

jdk:
  - oraclejdk8

env:
  global:
    - IMAGE_NAME=lp/lp-microservices
    - IMAGE_REPO_URL=693532776274.dkr.ecr.us-east-1.amazonaws.com/$IMAGE_NAME
    - MAVEN_VERSION=apache-maven-3.3.9
    - MAVEN_DIR=$SHIPPABLE_BUILD_DIR/maven
    - MAVEN_HOME=$MAVEN_DIR/$MAVEN_VERSION/bin


build:
  cache: true
  ci:
    # CI build session

    - if [[ ! -d "$MAVEN_DIR" ]]; then mkdir -p $MAVEN_DIR; fi
    - if [[ ! -d "$MAVEN_DIR" ]]; then cd $MAVEN_DIR; fi
    - if [[ ! -d "$MAVEN_DIR" ]]; then wget http://www-eu.apache.org/dist/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.zip; fi
    - if [[ ! -d "$MAVEN_DIR" ]]; then unzip apache-maven-3.3.9-bin.zip; fi

    - cd $SHIPPABLE_BUILD_DIR

    - mvn clean test

  on_success:
    - mvn clean package
    # If the branch is develop, create a production java docker image, tag it and push it to the staging repository
    - if [ "$BRANCH" = "develop" ]; then  docker build -f $SHIPPABLE_BUILD_DIR/module-task/prod/Dockerfile.prod  -t $IMAGE_NAME $SHIPPABLE_BUILD_DIR; fi
    - if [ "$BRANCH" = "develop" ]; then  docker tag --force $IMAGE_NAME:latest $IMAGE_REPO_URL:latest; fi
    - if [ "$BRANCH" = "develop" ]; then  docker tag --force $IMAGE_NAME:latest $IMAGE_REPO_URL:$BRANCH.$BUILD_NUMBER; fi
    - if [ "$BRANCH" = "develop" ]; then  docker push $IMAGE_REPO_URL:latest; fi
    - if [ "$BRANCH" = "develop" ]; then  docker push $IMAGE_REPO_URL:$BRANCH.$BUILD_NUMBER; fi

integrations:
  notifications:
    - integrationName: ms-slack
      type: slack
      recipients:
        - "#builds"
      branches:
        only:
          - master
          - develop
      on_success: change
      on_failure: always

  hub:
    - integrationName: ms-ec2-container-registry
      type: ecr
      region: us-east-1
